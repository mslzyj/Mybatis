<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyj.mybaits01.dao.EmployeeMapper">
<!-- 
namespace:指定为借口全类名
id：唯一标识
resultType：返回值类型
#{id}：从传递过来的参数中取出id值

public Employee getEmpById(Integer id);
 -->
   <!-- public Map<Integer, Employee> getEmpByLastNameLikeReturnMap(String lastName); -->
   <select id="getEmpByLastNameLikeReturnMap" resultType="com.zyj.mybaits01.bean.Employee">
     select *from tbl_employee where last_name like #{lastName}
   </select>
 
   <!-- public Map<String, Object> getEmpByIdReturnMap(Integer id); -->
   <select id="getEmpByIdReturnMap" resultType="map">
      select *from tbl_employee where id=#{id}
   </select>
 
   <!-- public List<Employee> getEmpsByLastNameLike(String lastName); -->
    <select id="getEmpsByLastNameLike" resultType="com.zyj.mybaits01.bean.Employee">
      select *from tbl_employee where last_name like #{lastName}
    </select>
 
    <!-- public Employee getEmpByMap(Map<String, Object> map) -->
    <select id="getEmpByMap" resultType="com.zyj.mybaits01.bean.Employee">
 		select * from tbl_employee where id = #{id} and last_name=#{lastName}
 	</select>
 	
    <!-- public Employee getEmpByIdAndLastName(@Param("id")Integer id,@Param("lastName")String lastName); -->
    
    <select id="getEmpByIdAndLastName" resultType="com.zyj.mybaits01.bean.Employee">
 		select * from tbl_employee where id = #{id} and last_name=#{lastName}
 	</select>
 	
 	<!-- 查询 -->
	<select id="getEmpById" resultType="employee">
		select id,last_name ,email,gender from tbl_employee where id = #{id}
	</select>
	
	<!-- parameterType：参数类型，可以省略， 
	获取自增主键的值：
		mysql支持自增主键，自增主键值的获取，mybatis也是利用statement.getGenreatedKeys()；
		useGeneratedKeys="true"；使用自增主键获取主键值策略
		keyProperty；指定对应的主键属性，也就是mybatis获取到主键值以后，将这个值封装给javaBean的哪个属性
	-->
    <insert id="addEmp" parameterType="com.zyj.mybaits01.bean.Employee"
       useGeneratedKeys="true" keyProperty="id">
        insert into tbl_employee (last_name,email,gender) 
        values(#{lastName},#{email},#{gender})
    </insert>
    <update id="updateEmp" parameterType="com.zyj.mybaits01.bean.Employee">
        update tbl_employee  
        set last_name=#{lastName},email=#{email},gender=#{gender}
        where id=#{id}
    </update>
    
    <delete id="deleteEmpById" parameterType="com.zyj.mybaits01.bean.Employee">
        delete from tbl_employee where id=#{id}
    </delete>
</mapper>