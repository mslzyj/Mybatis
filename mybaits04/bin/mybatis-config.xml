<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
 PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>    
  <!-- 
    1.mybatis可以使用properties来引入外部properties配置文件的信息内容；
    resource：引入类路径下的资源
    url：引入网络路径或者磁盘路径下的资源
   -->
  <properties resource="dbconfig.properties"></properties>
  
  <!-- 
  
  settings:包含很多设置项，settings用来设置每一个设置项，
  name：设置项的名字；
  value：设置项的值
   mapUnderscoreToCamelCase:开启驼峰命名
   -->
   <settings>
     <setting name="mapUnderscoreToCamelCase" value="true"/>
     <!--显示的指定每个我们需要更改的配置的值，即使他是默认的。防止版本更新带来的问题  -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<setting name="aggressiveLazyLoading" value="false"/>
   </settings>
    
    <typeAliases>
        <!-- 3.typeAliases :别名处理器，可以为java类型起别名，在数据库排位置文件时可以直接饮用别名
         type：指定要起别名的类型全名，默认别名就是java类名小写
         alisa：指定新的类型。
        -->
     <!--   <typeAlias type="com.zyj.mybaits01.bean.Employee"/>  -->
     <!-- package为某个包下的所有类批量起别名，name：指定包名（为当前包以及下面的所有后代包的每一个类都起一个默认的别名（不区分大小写）） -->
     <package name="com.zyj.mybaits01"/>
    </typeAliases>
    <!-- 
		4、environments：环境们，mybatis可以配置多种环境 ,default指定使用某种环境。可以达到快速切换环境。
			environment：配置一个具体的环境信息；必须有两个标签；id代表当前环境的唯一标识
				transactionManager：事务管理器；
					type：事务管理器的类型;JDBC(JdbcTransactionFactory)|MANAGED(ManagedTransactionFactory)
						自定义事务管理器：实现TransactionFactory接口.type指定为全类名
				
				dataSource：数据源;
					type:数据源类型;UNPOOLED(UnpooledDataSourceFactory)
								|POOLED(PooledDataSourceFactory)
								|JNDI(JndiDataSourceFactory)
					自定义数据源：实现DataSourceFactory接口，type是全类名
		 -->
	<environments default="development">
		<environment id="development">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>
	<!-- 将我们写好的sql映射文件（EmployeeMapper.xml）一定要注册到全局配置文件（mybatis-config.xml）中 -->
    
	<mappers>
<!-- 
			mapper:注册一个sql映射 
				注册配置文件
				resource：引用类路径下的sql映射文件
					mybatis/mapper/EmployeeMapper.xml
				url：引用网路路径或者磁盘路径下的sql映射文件
					file:///var/mappers/AuthorMapper.xml
					
				注册接口
				class：引用（注册）接口，
					1、有sql映射文件，映射文件名必须和接口同名，并且放在与接口同一目录下；
					2、没有sql映射文件，所有的sql都是利用注解写在接口上;
					推荐：
						比较重要的，复杂的Dao接口我们来写sql映射文件
						不重要，简单的Dao接口为了开发快速可以使用注解；
		-->
		<!--  
		<mapper resource="mybatis/mapper/EmployeeMapper.xml" />
		<mapper class="com.zyj.mybaits01.dao.EmployeeMapperAnnotation"/>
		-->
		<!-- 批量注册：需要将映射文件放在对应接口所在的包里面 -->
		<package name="com.zyj.mybaits01.dao"/>
	</mappers>
</configuration>